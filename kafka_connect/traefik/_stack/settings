#!/usr/bin/env bash

# START CONFIGURATION
DOLLAR='$'
export VCW_STACK_GLOBAL_STACKS="hkvb/confluent/kafka_connect"
export VCW_STACK_GLOBAL_STACKNAMES="kafka_connect"
export VCW_STACK_GLOBAL_BOOTSTACKS="kafka_connect"
export VCW_STACK_GLOBAL_RUNSTACKS=""
export VCW_STACK_GLOBAL_VOLUME_LIST="\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_secrets_volume,\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_connect_secrets_volume,\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_data_volume,\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_jars_volume"
export VCW_STACK_GLOBAL_VOLUME_INITIALISED=""
# END CONFIGURATION

# START GLOBAL SETTINGS
export VCW_STACK_GLOBAL='\
$VCW_STACK_GLOBAL_SERVICE_NAME,\
$VCW_STACK_GLOBAL_IMAGE_NAME,\
$VCW_STACK_KAFKA_CONNECT_ENVIRONMENT,\
$VCW_STACK_KAFKA_CONNECT_COMMAND,\
$VCW_STACK_KAFKA_CONNECT_PORTS,\
$VCW_STACK_KAFKA_CONNECT_VOLUMES,\
$VCW_STACK_KAFKA_CONNECT_NETWORKS,\
$VCW_STACK_KAFKA_CONNECT_DEPLOY_MODE,\
$VCW_STACK_KAFKA_CONNECT_COMPOSE_EXTENSIONS,\
$VCW_STACK_GLOBAL_VOLUMES,\
$VCW_STACK_GLOBAL_NETWORKS'
export VCW_STACK_GLOBAL_SERVICE_NAME="kafka_connect"
export VCW_STACK_GLOBAL_IMAGE_NAME="hkvb/confluent.kafka_connect"
export VCW_STACK_KAFKA_CONNECT_ENVIRONMENT="\
'CONNECT_BOOTSTRAP_SERVERS=kafka:9092',\
'CONNECT_REST_ADVERTISED_HOST_NAME=kafka_connect',\
'CONNECT_REST_PORT=8083',\
'CONNECT_GROUP_ID=${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}',\
'CONNECT_CONFIG_STORAGE_TOPIC=${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_configs',\
'CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR=1',\
'CONNECT_OFFSET_FLUSH_INTERVAL_MS=10000',\
'CONNECT_OFFSET_STORAGE_TOPIC=${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_offsets',\
'CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR=1',\
'CONNECT_STATUS_STORAGE_TOPIC=${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_status',\
'CONNECT_STATUS_STORAGE_REPLICATION_FACTOR=1',\
'CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter',\
'CONNECT_VALUE_CONVERTER=io.confluent.connect.avro.AvroConverter',\
'CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter',\
'CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter',\
'CONNECT_PRODUCER_CLASSPATH=/usr/share/java/monitoring-interceptors/monitoring-interceptors-6.0.0.jar',\
'CONNECT_PRODUCER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor',\
'CONNECT_CONSUMER_INTERCEPTOR_CLASSES=io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor',\
'CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components',\
'CONNECT_LOG4J_LOGGERS=org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR'
${DOLLAR}{CONFIGURATION_MODULE_KAFKA_CONNECT_ENVIRONMENT_EXTRA}"
export VCW_STACK_KAFKA_CONNECT_COMMAND=
export VCW_STACK_KAFKA_CONNECT_PORTS=
export VCW_STACK_KAFKA_CONNECT_VOLUMES="\
'${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_connect_secrets_volume:/etc/kafka-connect/secrets',\
'${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_secrets_volume:/etc/kafka/secrets',\
'${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_data_volume:/var/lib/kafka/data',\
'${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_jars_volume:/etc/kafka-connect/jars'"
export VCW_STACK_KAFKA_CONNECT_NETWORKS="${DOLLAR}{VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay, ${DOLLAR}{VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay"
export VCW_STACK_KAFKA_CONNECT_DEPLOY_MODE="replicated"
export VCW_STACK_KAFKA_CONNECT_COMPOSE_EXTENSIONS="
      labels: [traefik.enable=true,traefik.docker.network=${DOLLAR}{VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay,
      \"traefik.http.middlewares.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect.stripprefix.prefixes=/${DOLLAR}{VCW_STACK_GLOBAL_URLPREFIX},/${DOLLAR}{VCW_STACK_GLOBAL_URLPREFIX}\",
      traefik.http.services.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect.loadbalancer.server.port=8083,
      traefik.http.routers.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect.middlewares=${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect@docker,
      traefik.http.routers.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect.entrypoints=infometis,
      traefik.http.routers.${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_kafka_connect.rule=PathPrefix(\"/${DOLLAR}{VCW_STACK_GLOBAL_URLPREFIX}\")]
${DOLLAR}{VCW_STACK_KAFKA_CONNECT_COMPOSE_EXTENSIONS}"
export VCW_STACK_GLOBAL_VOLUMES="\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_connect_secrets_volume: { external: true },\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_secrets_volume: { external: true },\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_data_volume: { external: true },\
${DOLLAR}{VCW_STACK_GLOBAL_STACKPREFIX}_jars_volume: { external: true }"
export VCW_STACK_GLOBAL_NETWORKS="${DOLLAR}{VCW_STACK_GLOBAL_NETWORKGLOBAL}_overlay: { external: true }, ${DOLLAR}{VCW_STACK_GLOBAL_NETWORKLOCAL}_overlay: { external: true }"
# END GLOBAL SETTINGS

# START SETTINGS kafka_connect.base
export VCW_STACK_KAFKA_CONNECT_DEPLOY_RESOURCES_LIMITS_MEMORY="${CONFIGURATION_MODULE_KAFKA_CONNECT_MEMORY_LIMIT}"
export VCW_STACK_KAFKA_CONNECT_DEPLOY_RESOURCES_RESERVATIONS_MEMORY="${CONFIGURATION_MODULE_KAFKA_CONNECT_MEMORY_RESERVED}"
# END SETTINGS kafka_connect.base

# START TOPLEVEL SETTINGS
# END TOPLEVEL SETTINGS
